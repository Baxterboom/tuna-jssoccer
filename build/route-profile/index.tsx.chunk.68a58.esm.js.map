{"version":3,"sources":["webpack:///./routes/profile/index.tsx","webpack:///./routes/profile/style.css"],"names":["Profile","Component","[object Object]","super","arguments","_defineProperty","this","time","Date","now","count","setState","state","componentDidMount","timer","window","setInterval","updateTime","componentWillUnmount","clearInterval","render","_ref","_ref2","user","Object","preact__WEBPACK_IMPORTED_MODULE_0__","class","style","toLocaleString","onClick","increment","module","exports","profile"],"mappings":"4RAWe,MAAMA,UAAgBC,YAAwBC,cAAAC,SAAAC,WAAAC,EAAAC,KAAA,QAC1C,CACXC,KAAMC,KAAKC,MACXC,MAAO,KAH8CL,EAAAC,KAAA,gBAAAD,EAAAC,KAAA,aAoBrC,KAChBA,KAAKK,SAAS,CAAEJ,KAAMC,KAAKC,UArB0BJ,EAAAC,KAAA,YAwBtC,KACfA,KAAKK,SAAS,CAAED,MAAOJ,KAAKM,MAAMF,MAAQ,MAhBvCG,oBAEHP,KAAKQ,MAAQC,OAAOC,YAAYV,KAAKW,WAAY,KAI9CC,uBACHC,cAAcb,KAAKQ,OAWhBM,OAAPC,EAAAC,GAAuD,IAAvCC,EAAuCF,EAAvCE,KAAiBhB,EAAsBe,EAAtBf,KAAMG,EAAgBY,EAAhBZ,MACnC,OACIc,OAAAC,EAAA,EAAAD,CAAA,OAAKE,MAAOC,WACRH,OAAAC,EAAA,EAAAD,CAAA,sBAAcD,GACdC,OAAAC,EAAA,EAAAD,CAAA,sDAA8CD,EAA9C,KAEAC,OAAAC,EAAA,EAAAD,CAAA,4BAAoB,IAAIhB,KAAKD,GAAMqB,kBAEnCJ,OAAAC,EAAA,EAAAD,CAAA,SACIA,OAAAC,EAAA,EAAAD,CAAA,UAAQK,QAASvB,KAAKwB,WAAtB,YADJ,WAC+D,IAC1DpB,EAFL,gCC7ChBqB,EAAAC,QAAA,CAAkBC,QAAA","file":"route-profile/index.tsx.chunk.68a58.esm.js","sourcesContent":["import { Component, h } from \"preact\";\r\nimport * as style from \"./style.css\";\r\n\r\ninterface Props {\r\n    user: string;\r\n}\r\n\r\ninterface State {\r\n    time: number;\r\n    count: number;\r\n}\r\nexport default class Profile extends Component<Props, State> {\r\n    public state = {\r\n        time: Date.now(),\r\n        count: 10\r\n    };\r\n\r\n    public timer?: number;\r\n\r\n    // gets called when this route is navigated to\r\n    public componentDidMount() {\r\n        // start a timer for the clock:\r\n        this.timer = window.setInterval(this.updateTime, 1000);\r\n    }\r\n\r\n    // gets called just before navigating away from the route\r\n    public componentWillUnmount() {\r\n        clearInterval(this.timer);\r\n    }\r\n\r\n    // update the current time\r\n    public updateTime = () => {\r\n        this.setState({ time: Date.now() });\r\n    };\r\n\r\n    public increment = () => {\r\n        this.setState({ count: this.state.count + 1 });\r\n    };\r\n    public render({ user }: Props, { time, count }: State) {\r\n        return (\r\n            <div class={style.profile}>\r\n                <h1>Profile: {user}</h1>\r\n                <p>This is the user profile for a user named {user}.</p>\r\n\r\n                <div>Current time: {new Date(time).toLocaleString()}</div>\r\n\r\n                <p>\r\n                    <button onClick={this.increment}>Click Me</button> Clicked{\" \"}\r\n                    {count} times.\r\n                </p>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"profile\":\"profile__1f25-\"};"],"sourceRoot":""}